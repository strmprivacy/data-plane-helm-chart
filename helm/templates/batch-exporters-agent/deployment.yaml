{{ $component := .Values.components.batchExportersAgent }}
{{ if $component.enabled }}

{{ $name := $component.name }}
{{ $config := $component.configuration }}
{{ $kafka := .Values.kafka}}
{{ $bootstrap := $config.kafkaBootstrapServers |
          default (printf "%s-headless.%s.svc.cluster.local:%d" $kafka.fullnameOverride .Values.namespace ($kafka.service.ports.client | int)) }}
{{ $image := eq .Values.license.installationType "SELF_HOSTED" | ternary
(printf "%s/%s/%s/%s:%s" .Values.registry.url .Values.registry.base.prefix .Values.registry.base.path $component.image.name $component.image.version)
(printf "%s/%s:%s" .Values.registry.awsMarketplaceUrl (regexReplaceAll ".+/(.+)$" $component.image.name "${1}") $component.image.version)
}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{$name}}
  namespace: {{.Values.namespace}}
spec:
  replicas: 1
  selector:
    matchLabels:
      strmprivacy.io/app: {{$name}}
  template:
    metadata:
      labels:
        strmprivacy.io/app: {{$name}}
    spec:
      automountServiceAccountToken: true
      serviceAccountName: {{$name}}
      {{ if eq .Values.license.installationType "SELF_HOSTED" }}
      imagePullSecrets:
        - name: strmprivacy-docker-registry
      {{ end }}
      containers:
        - name: agent
          env:
          {{ include "installationEnvironmentVariables"  . }}
            - name: APP_NAMESPACE
              value: {{ .Values.namespace }}
            - name: STRM_BOOTSTRAP_SERVERS
              value: {{ $bootstrap }}
          {{ if eq .Values.license.installationType "SELF_HOSTED" }}
          {{ include "selfHostedEnvironmentVariables" .}}
          {{ end }}
          image: {{ $image }}
          {{ if .Values.kafkaSecurityConfig.enabled }}
          volumeMounts:
            - mountPath: /var/truststore
              name: client-truststore
          {{ end }}
      volumes:
        {{ if .Values.kafkaSecurityConfig.enabled }}
        - name: client-truststore
          secret:
            secretName: {{ .Values.kafkaSecurityConfig.sslTruststoreSecretName }}
            optional: false
        {{ end }}



{{ end }}
