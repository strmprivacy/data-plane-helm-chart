{{ $component := .Values.components.batchJobAgent }}
{{ if $component.enabled }}

{{- $config := $component.configuration -}}
{{- $postgres := .Values.postgresql -}}
{{- $name := $component.name }}
{{- $postgresHost := $config.postgres.host |
      default (printf "%s.%s" $postgres.fullnameOverride .Values.namespace) -}}
{{ $image :=  (printf "%s/%s/%s/%s:%s" .Values.registry.url .Values.registry.base.prefix .Values.registry.base.path $component.image.name $component.image.version) }}


apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{$name}}
  namespace: {{ .Values.namespace }}

spec:
  replicas: 1
  selector:
    matchLabels:
      strmprivacy.io/app: {{$name}}
  template:
    metadata:
      labels:
        strmprivacy.io/app: {{$name}}
    spec:
      automountServiceAccountToken: true
      serviceAccountName: {{$name}}
      imagePullSecrets:
        - name: strmprivacy-docker-registry
      containers:
        - name: agent
          image: {{ $image }}
          env:
            {{ include "installationDetails" .}}
            - name: STRM_ENTITY_NAMESPACE
              value: {{ .Values.namespace }}
            - name: STRM_DATABASE_NAME
              value: {{$config.postgres.database | default "postgres" }}
            - name: STRM_DATABASE_USERNAME
              value: {{$config.postgres.user | default "postgres" }}
            - name: STRM_DATABASE_CREDENTIALS_PASSWORD_KUBERNETES_SECRET_NAME
              value: {{ $postgres.fullnameOverride }}
            - name: STRM_DATABASE_CREDENTIALS_PASSWORD_KUBERNETES_SECRET_KEY_NAME
              value: "{{ $postgres.fullnameOverride }}-password"
            - name: STRM_DATABASE_CONNECTION_HOST
              value: "{{$postgresHost}}"
            - name: STRM_DATABASE_CONNECTION_PORT
              value: "{{$config.postgres.port | default $postgres.containerPorts.postgresql }}"
            - name: STRM_DRY_RUN_MODE
              value: "false"

{{ end }}
